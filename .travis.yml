# This Travis job script has been generated by a script via
#
#   haskell-ci '--config=cabal.haskell-ci' '--output=.travis.yml' 'quickcheck-instances.cabal'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.3.20190325
#
language: c
dist: xenial
git:
  # whether to recursively clone submodules
  submodules: false
branches:
  only:
    - master
cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx
  - rm -rfv $CABALHOME/packages/head.hackage
matrix:
  include:
    - compiler: ghc-8.6.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.4","cabal-install-2.4"]}}
    - compiler: ghc-8.4.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.4.4","cabal-install-2.4"]}}
    - compiler: ghc-8.2.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.2.2","cabal-install-2.4"]}}
    - compiler: ghc-8.0.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.0.2","cabal-install-2.4"]}}
    - compiler: ghc-7.10.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.10.3","cabal-install-2.4"]}}
    - compiler: ghc-7.8.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.8.4","cabal-install-2.4"]}}
    - compiler: ghc-7.6.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.6.3","cabal-install-2.4"]}}
    - compiler: ghc-7.4.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.4.2","cabal-install-2.4"]}}
before_install:
  - HC=$(echo "/opt/$CC/bin/ghc" | sed 's/-/\//')
  - HCPKG="$HC-pkg"
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  - export PATH="$CABALHOME/bin:$PATH"
  - ROOTDIR=$(pwd)
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER
install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - TEST=--enable-tests
  - BENCH=--enable-benchmarks
  - GHCHEAD=${GHCHEAD-false}
  - rm -f $CABALHOME/config
  - |
    echo "verbose: normal +nowrap +markoutput"          >> $CABALHOME/config
    echo "remote-build-reporting: anonymous"            >> $CABALHOME/config
    echo "remote-repo-cache: $CABALHOME/packages"       >> $CABALHOME/config
    echo "logs-dir:          $CABALHOME/logs"           >> $CABALHOME/config
    echo "world-file:        $CABALHOME/world"          >> $CABALHOME/config
    echo "extra-prog-path:   $CABALHOME/bin"            >> $CABALHOME/config
    echo "symlink-bindir:    $CABALHOME/bin"            >> $CABALHOME/config
    echo "build-summary:     $CABALHOME/logs/build.log" >> $CABALHOME/config
    echo "store-dir:         $CABALHOME/store"          >> $CABALHOME/config
    echo "install-dirs user"                            >> $CABALHOME/config
    echo "  prefix: $CABALHOME"                         >> $CABALHOME/config
    echo "repository hackage.haskell.org"               >> $CABALHOME/config
    echo "  url: http://hackage.haskell.org/"           >> $CABALHOME/config
  - cat $CABALHOME/config
  - rm -fv cabal.project cabal.project.local cabal.project.freeze
  - travis_retry ${CABAL} v2-update -v
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo 'packages: "."' >> cabal.project
  - |
    echo "write-ghc-environment-files: always" >> cabal.project
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(quickcheck-instances)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "./configure.ac" ]; then (cd "." && autoreconf -i); fi
  - ${CABAL} new-freeze -w ${HC} ${TEST} ${BENCH}
  - "cat cabal.project.freeze | sed -E 's/^(constraints: *| *)//' | sed 's/any.//'"
  - rm  cabal.project.freeze
  - ${CABAL} new-build -w ${HC} ${TEST} ${BENCH} --dep -j2 all
  - ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks --dep -j2 all
script:
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)
  # Packaging...
  - ${CABAL} new-sdist all
  # Unpacking...
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo 'packages: "quickcheck-instances-*/*.cabal"' >> cabal.project
  - |
    echo "write-ghc-environment-files: always" >> cabal.project
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(quickcheck-instances)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # Building...
  # this builds all libraries and executables (without tests/benchmarks)
  - ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks all
  # Building with tests and benchmarks...
  # build & run tests, build benchmarks
  - ${CABAL} new-build -w ${HC} ${TEST} ${BENCH} all
  # Testing...
  - ${CABAL} new-test -w ${HC} ${TEST} ${BENCH} all
  # cabal check...
  - (cd quickcheck-instances-* && ${CABAL} check)
  # haddock...
  - ${CABAL} new-haddock -w ${HC} ${TEST} ${BENCH} all
  # Building without installed constraints for packages in global-db...
  - rm -f cabal.project.local
  - ${CABAL} new-build -w ${HC} --disable-tests --disable-benchmarks all
  # Constraint sets
  - rm -rf cabal.project.local
  # Constraint set QuickCheck-2.10
  # Constraint set QuickCheck-2.10
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --constraint='QuickCheck==2.10.*' all
  # Constraint set QuickCheck-2.11
  # Constraint set QuickCheck-2.11
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --constraint='QuickCheck==2.11.*' all
  # Constraint set QuickCheck-2.12
  # Constraint set QuickCheck-2.12
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --constraint='QuickCheck==2.12.*' all
  # Constraint set lower-bounds-7.4.2
  # Constraint set lower-bounds-7.4.2
  - if [ $HCNUMVER -eq 70402 ] ; then ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --constraint='QuickCheck             ==2.10' --constraint='array                  ==0.4.0.0' --constraint='base                   ==4.5.1.0' --constraint='base-compat            ==0.9.3' --constraint='bytestring             ==0.9.2.1' --constraint='case-insensitive       ==1.2.0.4' --constraint='containers             ==0.4.2.1' --constraint='hashable               ==1.2.5.0' --constraint='nats                   ==1' --constraint='old-time               ==1.1.0.0' --constraint='scientific             ==0.2.0.0' --constraint='semigroups             ==0.18' --constraint='tagged                 ==0.8.5' --constraint='text                   ==1.0.0.0' --constraint='time                   ==1.4' --constraint='transformers           ==0.3.0.0' --constraint='transformers-compat    ==0.5.1.*' --constraint='unordered-containers   ==0.2.2.0' --constraint='uuid-types             ==1.0.3' --constraint='vector                 ==0.9' all ; fi

# REGENDATA ["--config=cabal.haskell-ci","--output=.travis.yml","quickcheck-instances.cabal"]
# EOF
